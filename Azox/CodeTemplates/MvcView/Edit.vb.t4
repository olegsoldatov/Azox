<#@ template language="VB" HostSpecific="True" #>
<#@ output extension=".vbhtml" #>
<#@ include file="Imports.include.t4" #>
@ModelType <#= ViewDataTypeName #>
<#
' "form-control" attribute is only supported for all EditorFor() in System.Web.Mvc 5.1.0.0 or later versions, except for checkbox, which uses a div in Bootstrap
Dim boolType As New String("System.Boolean")
Dim requiredMvcVersion As New Version("5.1.0.0")
Dim isControlHtmlAttributesSupported = MvcVersion >= requiredMvcVersion
' The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
If (IsPartialView) Then
#>

<#
    ElseIf (IsLayoutPageSelected) Then
#>
@Code
    ViewBag.Title = "Изменение"
<#
If (Not String.IsNullOrEmpty(LayoutPageFile))
#>
    Layout = "<#= LayoutPageFile#>"
<#
End If
#>
End Code

@Section Toolbar
	<button class="btn" form="model-form">
		<span class="fa fa-save"></span>
		<span>Сохранить</span>
	</button>
	<a href="@Url.Action("details", New With {.area = "", .id = Model.Id})" class="btn" target="_blank">
		<span class="fa fa-eye"></span>
		<span>Посмотреть</span>
	</a>
	<a href="@Url.Action("delete", New With {.id = Model.Id})" class="btn">
		<span class="fa fa-trash"></span>
		<span>Удалить</span>
	</a>
End Section

<header>
	<h1>@ViewBag.Title</h1>
</header>

<#
Else
#>

@Code
    Layout = Nothing
End Code

<!DOCTYPE html>

<html>
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ")
End If
#>
<#
If ReferenceScriptLibraries Then
#>
<#
    If (Not IsLayoutPageSelected) AndAlso (IsBundleConfigPresent) Then
#>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<#
    ElseIf (Not IsLayoutPageSelected)
#>
<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<#
    End If
End If
#>
<article>
	@Using Html.BeginForm("edit", Nothing, FormMethod.Post, New With {.id = "model-form"})
		@Html.AntiForgeryToken
		@Html.Hidden("ReturnUrl", Request.QueryString("ReturnUrl"))
<#
For Each modelProperty As PropertyMetadata in ModelMetadata.Properties
	If (modelProperty.Scaffold) AndAlso (Not modelProperty.IsAssociation) Then
		If (modelProperty.IsPrimaryKey) Then
#>
		@Html.HiddenFor(Function(m) m.<#= modelProperty.PropertyName #>)
<#
		ElseIf (Not modelProperty.IsReadOnly)
#>
		@<div class="form-group">
<#
		Dim isCheckbox = modelProperty.TypeName.Equals(boolType)
		If (Not isCheckbox) Then
#>
			@Html.LabelFor(Function(m) m.<#= modelProperty.PropertyName #>, htmlAttributes:=New With {.class = "control-label"})
<#
		End If
#>
<#
		If (Not isCheckbox) Then
			If (isControlHtmlAttributesSupported) Then
#>
			@Html.ValidationMessageFor(Function(m) m.<#= modelProperty.PropertyName #>, "", New With {.class = "text-danger"})
<#
			Else
#>
			@Html.ValidationMessageFor(Function(m) m.<#= modelProperty.PropertyName #>)
<#
			End If
		End If
#>
<#
		If (modelProperty.IsForeignKey) Then
#>
<#
			If (isControlHtmlAttributesSupported) Then
#>
			@Html.DropDownListFor(Function(m) m.<#= modelProperty.PropertyName #>, Nothing, htmlAttributes:=New With {.class = "form-control"})
<#
			Else
#>
			@Html.DropDownListFor(Function(m) m.<#= modelProperty.PropertyName #>, Nothing)
<#
			End If
#>
<#
		Else If (isControlHtmlAttributesSupported)
			If (isCheckbox) Then
#>
			<div class="checkbox">
				<label>
					@Html.EditorFor(Function(m) m.<#= modelProperty.PropertyName #>)
					@Html.DisplayNameFor(Function(m) m.<#= modelProperty.PropertyName #>)
				</label>
<#
			Else If (modelProperty.IsEnum AndAlso Not modelProperty.IsEnumFlags) Then
#>
			@Html.EnumDropDownListFor(Function(m) m.<#= modelproperty.PropertyName #>, htmlAttributes:=New With {.class = "form-control"})
<#
			Else
#>
			@Html.EditorFor(Function(m) m.<#= modelproperty.PropertyName #>, New With {.htmlAttributes = New With {.class = "form-control"}})
<#
			End If
		Else
#>
			@Html.EditorFor(Function(m) m.<#= modelProperty.PropertyName #>)
<#
		End If
#>
<#
		If (isCheckbox AndAlso isControlHtmlAttributesSupported) Then
#>
			</div>
<#
		End If
#>
		</div>
<#
		End If
	End If
Next
#>
		@<button class="btn btn-primary">Сохранить</button>
	End Using
</article>
<#
If (IsLayoutPageSelected) AndAlso (ReferenceScriptLibraries) AndAlso (IsBundleConfigPresent) Then
#>

@Section Scripts 
    @Scripts.Render("~/bundles/jqueryval")
End Section
<#
ElseIf (IsLayoutPageSelected AndAlso ReferenceScriptLibraries)
#>
<script src="~/Scripts/jquery-<#= JQueryVersion#>.min.js "></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<#
End If
#>
<#
' The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
If (Not IsPartialView) AndAlso (Not IsLayoutPageSelected) Then
    ClearIndent()
#>
</body>
</html>
<#
End If
#>
<#@ include file="ModelMetadataFunctions.vb.include.t4" #>